// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt        @id @default(autoincrement())
  name        String        @db.Text
  email       String        @unique @db.Text
  password    String        @db.Text
  pets        Pet[]
  chatHistory ChatHistory[]
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  @@map("user")
}

model Pet {
  id                BigInt        @id @default(autoincrement())
  user              User          @relation(fields: [userId], references: [id])
  userId            BigInt        @map("user_id")
  name              String        @db.Text
  age               Int
  weight            Decimal
  breed             String        @db.Text
  sex               Sex
  activityLevel     String        @map("activity_level")
  medicalConditions String?       @map("medical_conditions")
  diets             Diet[]
  foodPortions      FoodPortion[]
  chatHistory       ChatHistory[]
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  imageUrl          String?       @map("image_url")

  @@map("pet")
}

enum Sex {
  Male
  Female
}

model MedicalCondition {
  id          BigInt  @id @default(autoincrement())
  name        String  @db.Text
  description String?

  @@map("medical_condition")
}

model ChatHistory {
  id        BigInt       @id @default(autoincrement())
  user      User         @relation(fields: [userId], references: [id])
  userId    BigInt       @map("user_id")
  pet       Pet?         @relation(fields: [petId], references: [id])
  petId     BigInt?      @map("pet_id")
  message   String       @db.Text
  category  ChatCategory
  createdAt DateTime     @default(now()) @map("created_at")

  @@map("chat_history")
}

enum ChatCategory {
  Alimentacion
  Cuidados
  Preguntas_Generales
}

model CareRecommendation {
  id        BigInt @id @default(autoincrement())
  breed     String @db.Text
  care_tips String @db.Text

  @@map("care_recommendation")
}

model FoodPortion {
  id                   BigInt  @id @default(autoincrement())
  pet                  Pet     @relation(fields: [petId], references: [id])
  petId                BigInt  @map("pet_id")
  portionSize          Decimal @map("portion_size")
  visualRepresentation String  @map("visual_representation") @db.Text
  grams                Int

  @@map("food_portion")
}

model Diet {
  id                BigInt   @id @default(autoincrement())
  pet               Pet      @relation(fields: [petId], references: [id])
  petId             BigInt   @map("pet_id")
  calorie_intake    Int      @map("calorie_intake")
  recommended_foods String   @map("recommended_foods") @db.Text
  type              DietType

  @@map("diet")
}

enum DietType {
  PRINCIPAL
  ALTERNATIVA
}
